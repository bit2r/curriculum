{
  "hash": "c8b79fb55bd7b99bf8cf61e629021c5a",
  "result": {
    "markdown": "::: {.cell execution_count=1}\n``` {.python .cell-code}\ntraining_set = {'Dog':[[1,2],[2,3],[3,1]], 'Cat':[[11,20],[14,15],[12,15]]}\ntesting_set = [15,20]\n\n#ploting all data\nimport matplotlib.pyplot as plt\nc = 'x'\nfor data in training_set:\n\tprint(data)\n\t\n\t#print(training_set[data])\n\tfor i in training_set[data]:\n\t\tplt.plot(i[0], i[1], c, color='c')\n\t\n\tc = 'o'\nplt.show()\n\n# 기계학습모형 데이터셋 준비\nx = []\ny = []\nfor group in training_set:\n\t\n\tfor features in training_set[group]:\n\t\tx.append(features)\n\t\ty.append(group)\n\n# 기계학습모형 특정\nfrom sklearn import preprocessing, neighbors\n\n# 데이터에 모형 적합\nclf = neighbors.KNeighborsClassifier()\nclf.fit(x, y)\n\n# 예측모형 성능 평가\nfrom sklearn.metrics import accuracy_score\nimport pandas as pd\n\ndog_df = pd.DataFrame.from_dict(training_set['Dog'])\ndog_df['Y'] = \"Dog\"\n\ncat_df = pd.DataFrame.from_dict(training_set['Cat'])\ncat_df['Y'] = \"Cat\"\n\ntrainging_df = pd.concat([dog_df, cat_df])\n\nfeature_df = trainging_df.drop(['Y'], axis=1)\nlabel_df = trainging_df['Y']\n\nY_preds = clf.predict(feature_df)\n\nprint('모형 정확도   : {:.3f}'.format(accuracy_score(label_df, Y_preds)))\n\n# 분류모형 예측\nimport numpy as np\ntesting_set = np.array(testing_set)\ntesting_set = testing_set.reshape(1,-1)\n\n# 예측\nprediction = clf.predict(testing_set)\nprint(prediction)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDog\nCat\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](hello_world_sklearn_files/figure-html/cell-2-output-2.png){width=579 height=411}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n모형 정확도   : 1.000\n['Cat']\n```\n:::\n:::\n\n\n",
    "supporting": [
      "hello_world_sklearn_files"
    ],
    "filters": [],
    "includes": {}
  }
}