{
  "hash": "e6498c666a9cf8927205ebcbcb891429",
  "result": {
    "markdown": "---\ntitle: \"피처 공학\"\ndescription: \"기계학습 Feature Engineering 기법을 학습합니다.\"\ndate: today # 날짜 설정: now, last-modified\nauthor:\n  - name: 이광춘\n    affiliation: TCS\ntitle-block-banner: false\nformat:\n  html:\n    theme: \n      - flatly\n      - css/quarto-fonts.css\n    code-fold: false\n    code-overflow: scroll\n    toc: true\n    toc-depth: 3\n    number-sections: true\n    highlight-style: github    \n    self-contained: false\neditor_options: \n  chunk_output_type: console\nknitr:\n  opts_chunk: \n    collapse: true\n    comment: \"#>\" \n    R.options:\n      knitr.graphics.auto_pdf: true  \nfilters:\n   - lightbox\nlightbox: auto      \n---\n\n\n# Feature Engineering\n\n기계학습 모형을 개발할 때 피처 공학으로 자주 사용되는 기법은 다음과 같다.\n\n- 범주형: One-hot encoding\n- 연속형: 정규화(Normalization) 혹은 표준화(standardization)\n- 연속형 &rarr; 범주형: 비닝(Binning) 혹은 이산화(discretization)\n- 연속형: 교호작용(interaction) 과 다항식 확장\n- 새로운 피처 생성: 기존 피쳐를 변환 혹은 총계작업\n- 피처 제거: 관련없거나 중복된 피쳐 제거\n- 차원 축소: PCA 등\n- ...\n\n# 암수구별 예측모형\n\n[[Cloudera - 고객이탈 예측모형 그리고 API](https://aispiration.com/model/model-cloudera.html)]{.aside}\n\n\n$$\\text{펭귄성별} = f(x) + \\epsilon$$\n\n## 예측 모형 기본\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# 기계학습 팩키지\nimport pandas as pd\nfrom sklearn.preprocessing import OneHotEncoder\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score\nfrom palmerpenguins import load_penguins\n\n\n# 데이터셋\npenguins = load_penguins()\n\n# 데이터 전처리\npenguins = penguins.dropna()\npenguins['sex'] = penguins['sex'].map({'female': 0, 'male': 1})\n\nX = penguins[[\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\"]]\ny = penguins[\"sex\"]\n\n# 훈련 시험데이터셋 분리\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n\n# 로지스틱 이항 분류모형\nclf = LogisticRegression(max_iter = 1000, solver = 'lbfgs',\n                         class_weight = 'balance', random_state=1717)\nclf.fit(X_train, y_train)\n\n# 기계학습 모형 시험\n```\n\n::: {.cell-output-display}\n```{=html}\n<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(class_weight=&#x27;balance&#x27;, max_iter=1000, random_state=1717)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(class_weight=&#x27;balance&#x27;, max_iter=1000, random_state=1717)</pre></div></div></div></div></div>\n```\n:::\n\n```{.python .cell-code}\ny_pred = clf.predict(X_test)\n\n```\n:::\n\n\n## 모형 평가\n\n[- [알고리즘 성능평가](https://aispiration.com/ml/ml-assessment.html)\n- [예측모형 가치(Business Value)](https://aispiration.com/model/model-business-value.html)]{.aside}\n\n\n:::{.panel-tabset}\n\n### 요약통계량\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# 시험평가결과\nacc = accuracy_score(y_test, y_pred)\nprec = precision_score(y_test, y_pred, pos_label = 1)\nrec = recall_score(y_test, y_pred, pos_label = 1)\n\nprint(f\"Accuracy: {acc}\")\n#> Accuracy: 0.7761194029850746\nprint(f\"Precision: {prec}\")\n#> Precision: 0.8108108108108109\nprint(f\"Recall: {rec}\")\n#> Recall: 0.7894736842105263\n```\n:::\n\n\n\n### 표\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.metrics import confusion_matrix\n\nconf_matrix = confusion_matrix(y_test, y_pred)\n\nprint(conf_matrix)\n#> [[22  7]\n#>  [ 8 30]]\n```\n:::\n\n\n### 그래프\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport seaborn as sns\nsns.heatmap(conf_matrix, annot = True, \n            xticklabels = [\"Negative\", \"Positive\"], \n            yticklabels = [\"Negative\", \"Positive\"], cmap=\"Blues\")\n```\n\n::: {.cell-output-display}\n![](99_feature_eng_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n:::\n\n# 범주형 Feature\n\n[[SettingWithCopy Warning or Error 해결방안](https://blog.naver.com/PostView.nhn?blogId=wideeyed&logNo=221817400937)]{.aside}\n\n\n::: {.cell}\n\n```{.python .cell-code}\npd.set_option('mode.chained_assignment',  None)\n# 데이터셋\npenguins_fe = load_penguins()\n\n# 데이터 전처리\npenguins_fe = penguins_fe.dropna()\npenguins_fe['sex'] = penguins_fe['sex'].map({'female': 0, 'male': 1})\npenguins_fe = pd.get_dummies(penguins_fe, columns=['species', 'island', 'year'])\n\ny = penguins_fe[\"sex\"]\nX = penguins_fe.drop(['sex'], axis=1)\n\n# 훈련 시험데이터셋 분리\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n\n# 로지스틱 이항 분류모형\nclf = LogisticRegression(max_iter = 1000, solver = 'lbfgs',\n                         class_weight = 'balance', random_state=1717)\nclf.fit(X_train, y_train)\n\n# 기계학습 모형 시험\n```\n\n::: {.cell-output-display}\n```{=html}\n<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(class_weight=&#x27;balance&#x27;, max_iter=1000, random_state=1717)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(class_weight=&#x27;balance&#x27;, max_iter=1000, random_state=1717)</pre></div></div></div></div></div>\n```\n:::\n\n```{.python .cell-code}\ny_pred = clf.predict(X_test)\n```\n:::\n\n\n## 모형 평가\n\n:::{.panel-tabset}\n\n### 요약통계량\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# 시험평가결과\nacc = accuracy_score(y_test, y_pred)\nprec = precision_score(y_test, y_pred, pos_label = 1)\nrec = recall_score(y_test, y_pred, pos_label = 1)\n\nprint(f\"Accuracy: {acc}\")\n#> Accuracy: 0.8805970149253731\nprint(f\"Precision: {prec}\")\n#> Precision: 0.9629629629629629\nprint(f\"Recall: {rec}\")\n#> Recall: 0.7878787878787878\n```\n:::\n\n\n\n### 표\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom sklearn.metrics import confusion_matrix\n\nconf_matrix = confusion_matrix(y_test, y_pred)\n\nprint(conf_matrix)\n#> [[33  1]\n#>  [ 7 26]]\n```\n:::\n\n\n### 그래프\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport seaborn as sns\nsns.heatmap(conf_matrix, annot = True, \n            xticklabels = [\"Negative\", \"Positive\"], \n            yticklabels = [\"Negative\", \"Positive\"], cmap=\"Blues\")\n```\n\n::: {.cell-output-display}\n![](99_feature_eng_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n:::\n\n\n:::\n\n",
    "supporting": [
      "99_feature_eng_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}