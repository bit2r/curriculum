{
  "hash": "c5cc8dcd82c3b6918fe63be9f63c1ab4",
  "result": {
    "markdown": "---\ntitle: \"자료형과 자료구조\"\ndescription: \"데이터과학 자료형과 자료구조를 학습합니다.\"\ndate: today # 날짜 설정: now, last-modified\nauthor:\n  - name: 이광춘\n    affiliation: TCS\ntitle-block-banner: false\nformat:\n  html:\n    theme: \n      - flatly\n      - css/quarto-fonts.css\n    code-fold: false\n    code-overflow: scroll\n    toc: true\n    toc-depth: 3\n    number-sections: true\n    highlight-style: github    \n    self-contained: false\neditor_options: \n  chunk_output_type: console\nknitr:\n  opts_chunk: \n    collapse: true\n    comment: \"#>\" \n    R.options:\n      knitr.graphics.auto_pdf: true  \nfilters:\n   - lightbox\nlightbox: auto      \n---\n\n\n\n# 구분 방법\n\n\n## (Non) Primitive\n\n[![파이썬 자료구조](fig/data_structure_blog.png) 자료출처: [**Data Structures in Python— A Brief Introduction** - There is no one-size-fits-all kind of model when it comes to data structures.](https://towardsdatascience.com/data-structures-in-python-a-brief-introduction-b4135d7a9b7d)]{.aside}\n\n자료형과 자료구조를 Primitive 를 기준으로 나눌 수도 있다.\n\n- Primitive\n  - 정수형(Integer)\n  - 부동소수형(Float)\n  - 문자형(String)\n  - 부울형(Bloolean)\n- Non-Primitive  \n  - 내장 자료구조(Built-in)\n      - 리스트(List)\n      - 튜플(Tuple)\n      - 집합(Set)\n      - 사전(Dictionary)\n  - 사용자 정의(User-defined)\n    - 스택(Stack)\n    - 큐(Queue)\n    - 나무(Tree)\n    - 그래프(Graph)\n\n\n## 일반적인 구분\n\n- 변경가능 자료구조(Mutable data structures): 변경이 가능한 자료구조로 리스트(List), 사전(Dictionary), 집합(Sets)를 들 수 있다.\n- 변경불가능 자료구조(Immutable data structures): 한번 생성되면 변경이 불가능한 자료구조로 튜플(Tuples), 문자열(Strings)을 들 수 있다.\n- 순열 자료구조(Sequence data structures): 순열을 저정하는 자료구조로 리스트(list), 튜플(tuple), 문자열(string)을 들 수 있다.\n\n\n## 데이터 저장 방식\n\n- 선형 자료구조(Linear data structures): 데이터를 순차적으로 저장하는 자료구조로 배열(array), 연결 리스트(linked list), 큐(queue)를 들 수 있다.\n- 비선형 자료구조(Non-linear data structures): 데이터가 순차적으로 저장되지 않는 자료구조로 나무(tree), 그래프(graph), 해쉬테이블(hash table)을 들 수 있다.\n- 정적 자료구조(Static data structures): 정적 크기를 갖는 자료구조로 한번 생성되면 크기를 다시 재조정할 수 없는 자료구조로 배열(array)과 문자열(string)을 들 수 있다.\n- 동적 자료구조(Dynamic data structures): 필요한 경우 크기를 자유자재로 조정할 수 있는 자료구조로 리스트(list), 사전(dictionary), 해쉬테이블(hash table)을 들 수 있다.\n\n## 기타 구분 방식\n\n- 순서있는 자료구조(Ordered data structures): 자료가 저장된 순서정보를 담고 있는 자료구조로 리스트(list), 튜플(tuple), 문자열(string)을 들 수 있다.\n- 순서없는 자료구조(Unordered data structures): 자료가 저장된 순서정보를 담고 있지 않는 자료구조로 사전(dictionary)과 집합(set)을 들 수 있다.\n- 연관 자료구조(Associative data structures): 키-값(key-value) 쌍을 갖는 자료구조로 키값을 사용해서 값(value)에 접근할 수 있다. 대표적으로 사전(dictionary)과 해쉬 테이블(hash table)을 들 수 있다.\n- 스택 자료구조(Stack data structures): 스택을 구현한 자료구조\n- 큐 자료구조(Queue data structures): 큐를 구현한 자료구조\n- 나무 자료구조(Tree data structures): 나무모양을 갖는 자료구조\n\n\n## 위키백과 자료구조\n\n![파이썬 자료형](fig/python_datatype.png)\n\n# 시각화\n\n- [ipynb 다운로드](python_data_structure.ipynb)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}