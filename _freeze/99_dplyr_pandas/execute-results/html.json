{
  "hash": "0fa8b26009a8489f23aae155c23e3028",
  "result": {
    "markdown": "---\ntitle: \"데이터 다루기\"\ndescription: \"데이터프레임에 대해 살펴봅니다.\"\ndate: today # 날짜 설정: now, last-modified\nauthor:\n  - name: 이광춘\n    affiliation: TCS\ntitle-block-banner: false\nformat:\n  html:\n    theme: \n      - flatly\n      - css/quarto-fonts.css\n    code-fold: false\n    code-overflow: scroll\n    toc: true\n    toc-depth: 3\n    number-sections: true\n    highlight-style: github    \n    self-contained: false\neditor_options: \n  chunk_output_type: console\nknitr:\n  opts_chunk: \n    collapse: true\n    comment: \"#>\" \n    R.options:\n      knitr.graphics.auto_pdf: true  \n---\n\n\n\n\n\n# `dplyr` 동사\n\n- arrange (다시 정렬하기) : 행을 다시 정렬한다.\n- select (변수 선택하기) : 변수명으로 특정 칼럼을 추출한다.\n- mutate (변수 추가하기) : 새로운 변수를 추가한다.\n- filter (관측점 필터링) : 특정 기준을 만족하는 행을 추출한다.\n- summarise (변수를 값으로 줄이기) : 변수를 값(스칼라)으로 요약한다.\n\n[`dplyr` 동사 개념](https://aispiration.com/data-science/data-handling-dplyr.html#5_dplyr_%EB%8F%99%EC%82%AC)\n\n# 팔머 펭귄\n\n## 데이터셋\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(palmerpenguins)\n\npenguins\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins \n#> # A tibble: 344 × 8\n#>    species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n#>    <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n#>  1 Adelie  Torgersen           39.1          18.7        181    3750 male   2007\n#>  2 Adelie  Torgersen           39.5          17.4        186    3800 fema…  2007\n#>  3 Adelie  Torgersen           40.3          18          195    3250 fema…  2007\n#>  4 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n#>  5 Adelie  Torgersen           36.7          19.3        193    3450 fema…  2007\n#>  6 Adelie  Torgersen           39.3          20.6        190    3650 male   2007\n#>  7 Adelie  Torgersen           38.9          17.8        181    3625 fema…  2007\n#>  8 Adelie  Torgersen           39.2          19.6        195    4675 male   2007\n#>  9 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n#> 10 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n#> # … with 334 more rows, and abbreviated variable names ¹​flipper_length_mm,\n#> #   ²​body_mass_g\n```\n:::\n\n\n:::\n\n## 오름/내림 차순 정렬\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  arrange(bill_length_mm)\n```\n:::\n\n::: {.cell}\n\n```\n#> # A tibble: 344 × 8\n#>    species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n#>    <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n#>  1 Adelie  Dream               32.1          15.5        188    3050 fema…  2009\n#>  2 Adelie  Dream               33.1          16.1        178    2900 fema…  2008\n#>  3 Adelie  Torgersen           33.5          19          190    3600 fema…  2008\n#>  4 Adelie  Dream               34            17.1        185    3400 fema…  2008\n#>  5 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n#>  6 Adelie  Torgersen           34.4          18.4        184    3325 fema…  2007\n#>  7 Adelie  Biscoe              34.5          18.1        187    2900 fema…  2008\n#>  8 Adelie  Torgersen           34.6          21.1        198    4400 male   2007\n#>  9 Adelie  Torgersen           34.6          17.2        189    3200 fema…  2008\n#> 10 Adelie  Biscoe              35            17.9        190    3450 fema…  2008\n#> # … with 334 more rows, and abbreviated variable names ¹​flipper_length_mm,\n#> #   ²​body_mass_g\n```\n:::\n\n\n:::\n\n\n## 변수 선택\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  select(species, bill_length_mm, sex)\n```\n:::\n\n::: {.cell}\n\n```\n#> # A tibble: 344 × 3\n#>    species bill_length_mm sex   \n#>    <fct>            <dbl> <fct> \n#>  1 Adelie            39.1 male  \n#>  2 Adelie            39.5 female\n#>  3 Adelie            40.3 female\n#>  4 Adelie            NA   <NA>  \n#>  5 Adelie            36.7 female\n#>  6 Adelie            39.3 male  \n#>  7 Adelie            38.9 female\n#>  8 Adelie            39.2 male  \n#>  9 Adelie            34.1 <NA>  \n#> 10 Adelie            42   <NA>  \n#> # … with 334 more rows\n```\n:::\n\n\n:::\n\n\n## 관측점 필터링\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  filter(island == \"Dream\")\n```\n:::\n\n::: {.cell}\n\n```\n#> # A tibble: 124 × 8\n#>    species island bill_length_mm bill_depth_mm flipper_len…¹ body_…² sex    year\n#>    <fct>   <fct>           <dbl>         <dbl>         <int>   <int> <fct> <int>\n#>  1 Adelie  Dream            39.5          16.7           178    3250 fema…  2007\n#>  2 Adelie  Dream            37.2          18.1           178    3900 male   2007\n#>  3 Adelie  Dream            39.5          17.8           188    3300 fema…  2007\n#>  4 Adelie  Dream            40.9          18.9           184    3900 male   2007\n#>  5 Adelie  Dream            36.4          17             195    3325 fema…  2007\n#>  6 Adelie  Dream            39.2          21.1           196    4150 male   2007\n#>  7 Adelie  Dream            38.8          20             190    3950 male   2007\n#>  8 Adelie  Dream            42.2          18.5           180    3550 fema…  2007\n#>  9 Adelie  Dream            37.6          19.3           181    3300 fema…  2007\n#> 10 Adelie  Dream            39.8          19.1           184    4650 male   2007\n#> # … with 114 more rows, and abbreviated variable names ¹​flipper_length_mm,\n#> #   ²​body_mass_g\n```\n:::\n\n\n:::\n\n\n## 변수 생성\n\n[[체질량지수(BMI) 보고서](https://aispiration.com/comp_document/tutorial/01_rmarkdown/bmi.html)]{.aside}\n\n$$BMI = \\frac{체중(kg)}{키(미터)^2}$$\n\n$$Bill(부리) = \\frac{\\text{부리길이}}{부리깊이} \\times 2 $$\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  select(species, island, bill_length_mm,  bill_depth_mm) %>% \n  mutate(bill =  bill_length_mm / bill_depth_mm * 2)\n\n```\n:::\n\n::: {.cell}\n\n```\n#> # A tibble: 344 × 5\n#>    species island    bill_length_mm bill_depth_mm  bill\n#>    <fct>   <fct>              <dbl>         <dbl> <dbl>\n#>  1 Adelie  Torgersen           39.1          18.7  4.18\n#>  2 Adelie  Torgersen           39.5          17.4  4.54\n#>  3 Adelie  Torgersen           40.3          18    4.48\n#>  4 Adelie  Torgersen           NA            NA   NA   \n#>  5 Adelie  Torgersen           36.7          19.3  3.80\n#>  6 Adelie  Torgersen           39.3          20.6  3.82\n#>  7 Adelie  Torgersen           38.9          17.8  4.37\n#>  8 Adelie  Torgersen           39.2          19.6  4   \n#>  9 Adelie  Torgersen           34.1          18.1  3.77\n#> 10 Adelie  Torgersen           42            20.2  4.16\n#> # … with 334 more rows\n```\n:::\n\n\n:::\n\n\n## 요약\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  tidyr::drop_na() %>% \n  group_by(species) %>% \n  summarise(부리길이평균 = mean(bill_length_mm))\n```\n:::\n\n::: {.cell}\n\n```\n#> # A tibble: 3 × 2\n#>   species   부리길이평균\n#>   <fct>            <dbl>\n#> 1 Adelie            38.8\n#> 2 Chinstrap         48.8\n#> 3 Gentoo            47.6\n```\n:::\n\n\n:::\n\n\n# 파이썬 Suiba\n\n[\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\npy_install(\"siuba\")\n```\n:::\n\n]{.aside}\n\n## 데이터셋\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\n\npenguins = pd.read_csv(\"https://raw.githubusercontent.com/mcnakhaee/palmerpenguins/master/palmerpenguins/data/penguins.csv\")\npenguins.head()\n```\n:::\n\n::: {.cell}\n\n```\n#>   species     island  bill_length_mm  ...  body_mass_g     sex  year\n#> 0  Adelie  Torgersen            39.1  ...       3750.0    male  2007\n#> 1  Adelie  Torgersen            39.5  ...       3800.0  female  2007\n#> 2  Adelie  Torgersen            40.3  ...       3250.0  female  2007\n#> 3  Adelie  Torgersen             NaN  ...          NaN     NaN  2007\n#> 4  Adelie  Torgersen            36.7  ...       3450.0  female  2007\n#> \n#> [5 rows x 8 columns]\n```\n:::\n\n\n:::\n\n## 오름/내림 차순 정렬\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport siuba as si\n\n( penguins\n  >> si.arrange(si.__.bill_length_mm)\n)\n```\n:::\n\n::: {.cell}\n\n```\n#>        species     island  bill_length_mm  ...  body_mass_g     sex  year\n#> 142     Adelie      Dream            32.1  ...       3050.0  female  2009\n#> 98      Adelie      Dream            33.1  ...       2900.0  female  2008\n#> 70      Adelie  Torgersen            33.5  ...       3600.0  female  2008\n#> 92      Adelie      Dream            34.0  ...       3400.0  female  2008\n#> 8       Adelie  Torgersen            34.1  ...       3475.0     NaN  2007\n#> ..         ...        ...             ...  ...          ...     ...   ...\n#> 253     Gentoo     Biscoe            55.9  ...       5600.0    male  2009\n#> 293  Chinstrap      Dream            58.0  ...       3700.0  female  2007\n#> 185     Gentoo     Biscoe            59.6  ...       6050.0    male  2007\n#> 3       Adelie  Torgersen             NaN  ...          NaN     NaN  2007\n#> 271     Gentoo     Biscoe             NaN  ...          NaN     NaN  2009\n#> \n#> [344 rows x 8 columns]\n```\n:::\n\n\n:::\n\n\n## 변수 선택\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport siuba as si\n\n( penguins   \n  >> si.select(si._.species, si._.bill_length_mm, si._.sex)\n)\n```\n:::\n\n::: {.cell}\n\n```\n#>        species  bill_length_mm     sex\n#> 0       Adelie            39.1    male\n#> 1       Adelie            39.5  female\n#> 2       Adelie            40.3  female\n#> 3       Adelie             NaN     NaN\n#> 4       Adelie            36.7  female\n#> ..         ...             ...     ...\n#> 339  Chinstrap            55.8    male\n#> 340  Chinstrap            43.5  female\n#> 341  Chinstrap            49.6    male\n#> 342  Chinstrap            50.8    male\n#> 343  Chinstrap            50.2  female\n#> \n#> [344 rows x 3 columns]\n```\n:::\n\n\n:::\n\n\n## 관측점 필터링\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport siuba as si\n\n( penguins   \n  >> si.filter(si._.island == \"Dream\")\n)\n```\n:::\n\n::: {.cell}\n\n```\n#>        species island  bill_length_mm  ...  body_mass_g     sex  year\n#> 30      Adelie  Dream            39.5  ...       3250.0  female  2007\n#> 31      Adelie  Dream            37.2  ...       3900.0    male  2007\n#> 32      Adelie  Dream            39.5  ...       3300.0  female  2007\n#> 33      Adelie  Dream            40.9  ...       3900.0    male  2007\n#> 34      Adelie  Dream            36.4  ...       3325.0  female  2007\n#> ..         ...    ...             ...  ...          ...     ...   ...\n#> 339  Chinstrap  Dream            55.8  ...       4000.0    male  2009\n#> 340  Chinstrap  Dream            43.5  ...       3400.0  female  2009\n#> 341  Chinstrap  Dream            49.6  ...       3775.0    male  2009\n#> 342  Chinstrap  Dream            50.8  ...       4100.0    male  2009\n#> 343  Chinstrap  Dream            50.2  ...       3775.0  female  2009\n#> \n#> [124 rows x 8 columns]\n```\n:::\n\n\n:::\n\n\n## 변수 생성\n\n[[체질량지수(BMI) 보고서](https://aispiration.com/comp_document/tutorial/01_rmarkdown/bmi.html)]{.aside}\n\n$$BMI = \\frac{체중(kg)}{키(미터)^2}$$\n\n$$Bill(부리) = \\frac{\\text{부리길이}}{부리깊이} \\times 2 $$\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport siuba as si\n\n( penguins   \n  >> si.select(si._.species, si._.island, si._.bill_length_mm, si._.bill_depth_mm)\n  >> si.mutate(bill =  si._.bill_length_mm / si._.bill_depth_mm * 2)\n)\n```\n:::\n\n::: {.cell}\n\n```\n#>        species     island  bill_length_mm  bill_depth_mm      bill\n#> 0       Adelie  Torgersen            39.1           18.7  4.181818\n#> 1       Adelie  Torgersen            39.5           17.4  4.540230\n#> 2       Adelie  Torgersen            40.3           18.0  4.477778\n#> 3       Adelie  Torgersen             NaN            NaN       NaN\n#> 4       Adelie  Torgersen            36.7           19.3  3.803109\n#> ..         ...        ...             ...            ...       ...\n#> 339  Chinstrap      Dream            55.8           19.8  5.636364\n#> 340  Chinstrap      Dream            43.5           18.1  4.806630\n#> 341  Chinstrap      Dream            49.6           18.2  5.450549\n#> 342  Chinstrap      Dream            50.8           19.0  5.347368\n#> 343  Chinstrap      Dream            50.2           18.7  5.368984\n#> \n#> [344 rows x 5 columns]\n```\n:::\n\n\n:::\n\n\n## 요약\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport siuba as si\n\n( penguins \n    >> si.group_by(si._.species) \n    >> si.summarize(부리길이평균 = si._.bill_length_mm.mean())\n)\n```\n:::\n\n::: {.cell}\n\n```\n#>      species     부리길이평균\n#> 0     Adelie  38.791391\n#> 1  Chinstrap  48.833824\n#> 2     Gentoo  47.504878\n```\n:::\n\n\n:::\n\n\n# Pandas 문법\n\n칼럼(변수)를 선택하는 다양한 방법\n\n## `df.column_name`\n\n\n::: {.cell}\n\n```{.python .cell-code}\npenguins.island\n#> 0      Torgersen\n#> 1      Torgersen\n#> 2      Torgersen\n#> 3      Torgersen\n#> 4      Torgersen\n#>          ...    \n#> 339        Dream\n#> 340        Dream\n#> 341        Dream\n#> 342        Dream\n#> 343        Dream\n#> Name: island, Length: 344, dtype: object\n```\n:::\n\n\n##  `df['column_name']`\n\n\n::: {.cell}\n\n```{.python .cell-code}\npenguins['island']\n#> 0      Torgersen\n#> 1      Torgersen\n#> 2      Torgersen\n#> 3      Torgersen\n#> 4      Torgersen\n#>          ...    \n#> 339        Dream\n#> 340        Dream\n#> 341        Dream\n#> 342        Dream\n#> 343        Dream\n#> Name: island, Length: 344, dtype: object\n```\n:::\n\n\n## `df[['column_name']]`\n\n\n::: {.cell}\n\n```{.python .cell-code}\npenguins[['island']]\n#>         island\n#> 0    Torgersen\n#> 1    Torgersen\n#> 2    Torgersen\n#> 3    Torgersen\n#> 4    Torgersen\n#> ..         ...\n#> 339      Dream\n#> 340      Dream\n#> 341      Dream\n#> 342      Dream\n#> 343      Dream\n#> \n#> [344 rows x 1 columns]\n```\n:::\n\n\n\n## `df.loc[:, 'column_name']`\n\n\n::: {.cell}\n\n```{.python .cell-code}\npenguins.loc[:, 'island']\n#> 0      Torgersen\n#> 1      Torgersen\n#> 2      Torgersen\n#> 3      Torgersen\n#> 4      Torgersen\n#>          ...    \n#> 339        Dream\n#> 340        Dream\n#> 341        Dream\n#> 342        Dream\n#> 343        Dream\n#> Name: island, Length: 344, dtype: object\n```\n:::\n\n\n## `df.iloc[:, column_index]`\n\n\n::: {.cell}\n\n```{.python .cell-code}\npenguins.iloc[:, 1]\n#> 0      Torgersen\n#> 1      Torgersen\n#> 2      Torgersen\n#> 3      Torgersen\n#> 4      Torgersen\n#>          ...    \n#> 339        Dream\n#> 340        Dream\n#> 341        Dream\n#> 342        Dream\n#> 343        Dream\n#> Name: island, Length: 344, dtype: object\n```\n:::\n\n\n\n# 파이프 vs 체인줄\n\n## 사례\n\n부리길이(bill_length_mm)가 5 이상이고, <br>\n펭귄종과 부리길이 칼럼만 선택해서 <br>\n펭귄종별로 <br>\n평균 부리길이를 구하세요. <br>\n\n\n\n### dplyr 파이프\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>%\n  filter(bill_length_mm > 5) %>%\n  select(species, bill_length_mm) %>%\n  group_by(species) %>%\n  summarize(mean_bill_length = mean(bill_length_mm))\n```\n:::\n\n::: {.cell}\n\n```\n#> # A tibble: 3 × 2\n#>   species   mean_bill_length\n#>   <fct>                <dbl>\n#> 1 Adelie                38.8\n#> 2 Chinstrap             48.8\n#> 3 Gentoo                47.5\n```\n:::\n\n\n:::\n\n### siuba 파이프\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport siuba as si\n\n( penguins \n    >> si.filter(si._.bill_length_mm > 5)\n    >> si.select(si._.species, si._.bill_length_mm)\n    >> si.group_by(si._.species) \n    >> si.summarize(부리길이평균 = si._.bill_length_mm.mean())\n)\n```\n:::\n\n::: {.cell}\n\n```\n#>      species     부리길이평균\n#> 0     Adelie  38.791391\n#> 1  Chinstrap  48.833824\n#> 2     Gentoo  47.504878\n```\n:::\n\n\n:::\n\n\n### pandas 체이닝\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\n\npenguins \\\n  .loc[penguins.bill_length_mm > 5] \\\n  .loc[:, [\"species\", \"bill_length_mm\"]] \\\n  .groupby(\"species\") \\\n  .bill_length_mm.mean()\n```\n:::\n\n::: {.cell}\n\n```\n#> species\n#> Adelie       38.791391\n#> Chinstrap    48.833824\n#> Gentoo       47.504878\n#> Name: bill_length_mm, dtype: float64\n```\n:::\n\n\n:::\n\n\n# SQL 쿼리문\n\n:::{layout-ncol=\"2\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dbplyr)\n\ncon <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\")\ncopy_to(con, penguins)\n\npenguins_db <- tbl(con, \"penguins\")\n\npenguins_db %>%\n  filter(bill_length_mm > 5) %>%\n  select(species, bill_length_mm) %>%\n  group_by(species) %>%\n  summarize(mean_bill_length = mean(bill_length_mm)) %>% \n  show_query()\n```\n:::\n\n::: {.cell}\n\n```\n#> <SQL>\n#> SELECT `species`, AVG(`bill_length_mm`) AS `mean_bill_length`\n#> FROM (\n#>   SELECT `species`, `bill_length_mm`\n#>   FROM `penguins`\n#>   WHERE (`bill_length_mm` > 5.0)\n#> )\n#> GROUP BY `species`\n```\n:::\n\n\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}