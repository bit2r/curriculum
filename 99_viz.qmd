---
title: "시각화"
description: "데이터프레임 시각화를 학습합니다."
date: today # 날짜 설정: now, last-modified
author:
  - name: 이광춘
    affiliation: TCS
title-block-banner: false
format:
  html:
    theme: 
      - flatly
      - css/quarto-fonts.css
    code-fold: false
    code-overflow: scroll
    toc: true
    toc-depth: 3
    number-sections: true
    highlight-style: github    
    self-contained: false
editor_options: 
  chunk_output_type: console
knitr:
  opts_chunk: 
    collapse: true
    comment: "#>" 
    R.options:
      knitr.graphics.auto_pdf: true  
filters:
   - lightbox
lightbox: auto      
---

# 그래프 문법

- [데이터 시각화 - 그래프 문법 실무](https://aispiration.com/viz/viz-ggplot2-practice.html)


# 시각화 패키지

- 정적 그래프
  - [`plotnine`](https://github.com/has2k1/plotnine)
  - [`matplotlib`](https://github.com/matplotlib/matplotlib)
    - NumPy 친화적 그래픽 패키지
  - [`seaborn`](https://github.com/mwaskom/seaborn)
    - `matplotlib` 을 기반으로 하고 `pandas` 자료구조 친화적 그래픽 패키지
- 인터랙티브 그래프    
  - [`plotly`](https://plotly.com/python/)
  - [`bokeh`](https://bokeh.org/)


# 헬로월드

동일한 시각화 그래프를 다양한 패키지를 활용하여 시각화해보자.
`seaborn`, `plotnine` 패키지를 사전에 설치한다.

```bash
$ pip3 install seaborn
$ pip3 install plotnine
```


::: {.panel-tabset}

### `ggplot`

```{r}
library(tidyverse)
library(gapminder)

ggplot(data = gapminder, aes(x = lifeExp, y = gdpPercap)) +
  geom_point()
```

### `plotnine`

```{python}
from plotnine import *
from gapminder import gapminder

( ggplot(gapminder)
   + geom_point(aes('lifeExp', 'gdpPercap'))
)
```

### `matplotlib`

```{python}
import matplotlib.pyplot as plt
from gapminder import gapminder

# 산점도 정의
plt.scatter(gapminder['lifeExp'], gapminder['gdpPercap'])

# 축 라벨 추가
plt.xlabel('Life Expectancy')
plt.ylabel('GDP per Capita')

# 그래프 보이기
plt.show()
```

### `seaborn`

```{python}
import seaborn as sns
from gapminder import gapminder

# 산점도 정의
sns.scatterplot(x='lifeExp', y='gdpPercap', data=gapminder)

# 축 라벨 추가
plt.xlabel('Life Expectancy')
plt.ylabel('GDP per Capita')

# 그래프 보이기
plt.show()
```

:::


# 그래프 문법

- [그래프 문법 - `ggplot`](https://aispiration.com/viz/viz-ggplot2-practice.html)

## 시각화 연습 1

::: {.panel-tabset}

### `ggplot`

```{r}
library(tidyverse)
library(gapminder)

gapminder %>% 
  ggplot(aes(x=year, y=lifeExp, group = country, color=continent)) +
    geom_line() +
    labs(x = "연도", y = "기대수명",
         title = "국가별 평균 기대수명 변화 추이")
```

### `plotnine`

```{python}
import matplotlib.pyplot as plt 
import plotnine as p9
from gapminder import gapminder

( p9.ggplot(gapminder)
    + p9.aes(x='year', y='lifeExp', group='country', color='continent')
    + p9.geom_line()
    + p9.labs(x='연도', y='기대수명', title='국가별 평균 기대수명 변화 추이') 
)

```

### `matplotlib`

```{python}
import matplotlib.pyplot as plt
from gapminder import gapminder

plt.figure(figsize=(10,5))

continent_colors = {'Africa':'red', 'Americas':'blue', 'Asia':'green', 'Europe':'black', 'Oceania':'purple'}

for continent, group in gapminder.groupby('continent'):
    color = continent_colors[continent]
    for country, sub_group in group.groupby('country'):
        plt.plot(sub_group['year'], sub_group['lifeExp'], color = color)

plt.xlabel("연도")
plt.ylabel("기대수명")
plt.title("국가별 평균 기대수명 변화 추이")

# create a custom legend
for continent, color in continent_colors.items():
    plt.scatter([], [], c=color, label=continent)
    
plt.legend(scatterpoints=1, frameon=False, labelspacing=0.3, bbox_to_anchor=(1.1, 1), loc='upper right', bbox_transform=plt.gcf().transFigure)

plt.show()
```

### `seaborn`

```{python}
import matplotlib.pyplot as plt
from gapminder import gapminder

import seaborn as sns

continent_colors = {'Africa':'red', 'Americas':'blue', 'Asia':'green', 'Europe':'black', 'Oceania':'purple'}

sns.set(rc={'figure.figsize':(10,5)})

for continent, group in gapminder.groupby('continent'):
    color = continent_colors[continent]
    for country, sub_group in group.groupby('country'):
        sns.lineplot(x="year", y="lifeExp", data=sub_group, color=color)

plt.xlabel("연도")
plt.ylabel("기대수명")
plt.title("국가별 평균 기대수명 변화 추이")

# create a custom legend
for continent, color in continent_colors.items():
    plt.scatter([], [], c=color, label=continent)
    
plt.legend(scatterpoints=1, frameon=False, labelspacing=0.3, bbox_to_anchor=(1.1, 1), loc='upper right', bbox_transform=plt.gcf().transFigure)    

plt.show()

```


:::


## 시각화 연습 2


2002년 기준 각 대륙별 1인당 GDP와 평균수명을 시각화하세요.


```{r}
gapminder::gapminder %>% 
  filter(year == 2002) %>% 
  ggplot() + 
    aes(x = gdpPercap) + 
    aes(y = lifeExp) + 
    geom_point() + 
    aes(color = continent) + 
    aes(size = pop/1000000) + 
    labs(size = "Population\n(millions)") + 
    labs(color = NULL) + 
    labs(x = "Per Capita GDP ($US)") + 
    labs(y = "Life expecancy (years)") + 
    labs(title = "Life expectancy vs Per Capita GDP, 2002") + 
    labs(subtitle = "Data Source: gapminder package") + 
    labs(caption = "Produced for MA206 in Fall AY2023") + 
    facet_wrap(~ continent)
```
```
